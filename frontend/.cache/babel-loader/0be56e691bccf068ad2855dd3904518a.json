{"ast":null,"code":"import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass HeatMap extends Component {\n  componentDidMount() {\n    this.drawMap();\n  }\n\n  drawMap() {\n    // set the dimensions and margins of the graph\n    var margin = {\n      top: 30,\n      right: 30,\n      bottom: 30,\n      left: 30\n    },\n        width = 450 - margin.left - margin.right,\n        height = 450 - margin.top - margin.bottom; // append the svg object to the body of the page\n\n    var svg = d3.select(\"#my_dataviz\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // Labels of row and columns\n\n    var myGroups = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"];\n    var myVars = [\"v1\", \"v2\", \"v3\", \"v4\", \"v5\", \"v6\", \"v7\", \"v8\", \"v9\", \"v10\"]; // Build X scales and axis:\n\n    var x = d3.scaleBand().range([0, width]).domain(myGroups).padding(0.01);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)); // Build X scales and axis:\n\n    var y = d3.scaleBand().range([height, 0]).domain(myVars).padding(0.01);\n    svg.append(\"g\").call(d3.axisLeft(y)); // Build color scale\n\n    var myColor = d3.scaleLinear().range([\"white\", \"#69b3a2\"]).domain([1, 100]); //Read the data\n\n    d3.csv(\"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/heatmap_data.csv\", function (data) {\n      // create a tooltip\n      var tooltip = d3.select(\"body\").append(\"div\").style(\"opacity\", 0).attr(\"class\", \"tooltip\").style(\"background-color\", \"white\").style(\"border\", \"solid\").style(\"border-width\", \"2px\").style(\"border-radius\", \"5px\").style(\"padding\", \"5px\"); // Three function that change the tooltip when user hover / move / leave a cell\n\n      var mouseover = function (d) {\n        tooltip.style(\"opacity\", 1);\n      };\n\n      var mousemove = function (d) {\n        tooltip.html(\"The exact value of<br>this cell is: \" + d.value).style(\"left\", d3.mouse(this)[0] + 70 + \"px\").style(\"top\", d3.mouse(this)[1] + \"px\");\n      };\n\n      var mouseleave = function (d) {\n        tooltip.style(\"opacity\", 0);\n      }; // add the squares\n\n\n      svg.selectAll().data(data, function (d) {\n        return d.group + ':' + d.variable;\n      }).enter().append(\"rect\").attr(\"x\", function (d) {\n        return x(d.group);\n      }).attr(\"y\", function (d) {\n        return y(d.variable);\n      }).attr(\"width\", x.bandwidth()).attr(\"height\", y.bandwidth()).style(\"fill\", function (d) {\n        return myColor(d.value);\n      }).on(\"mouseover\", mouseover).on(\"mousemove\", mousemove).on(\"mouseleave\", mouseleave);\n    });\n  }\n\n}\n\nexport default HeatMap;","map":{"version":3,"sources":["/Users/sauravsingh/workspace/react-d3/src/HeatMap.js"],"names":["React","Component","d3","HeatMap","componentDidMount","drawMap","margin","top","right","bottom","left","width","height","svg","select","append","attr","myGroups","myVars","x","scaleBand","range","domain","padding","call","axisBottom","y","axisLeft","myColor","scaleLinear","csv","data","tooltip","style","mouseover","d","mousemove","html","value","mouse","mouseleave","selectAll","group","variable","enter","bandwidth","on"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as d3 from 'd3';\n\nclass HeatMap extends Component {\n  componentDidMount() {\n    this.drawMap();\n  }\n\n  drawMap() {\n    // set the dimensions and margins of the graph\n    var margin = {top: 30, right: 30, bottom: 30, left: 30},\n      width = 450 - margin.left - margin.right,\n      height = 450 - margin.top - margin.bottom;\n\n    // append the svg object to the body of the page\n    var svg = d3.select(\"#my_dataviz\")\n    .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\",\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // Labels of row and columns\n    var myGroups = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"]\n    var myVars = [\"v1\", \"v2\", \"v3\", \"v4\", \"v5\", \"v6\", \"v7\", \"v8\", \"v9\", \"v10\"]\n\n    // Build X scales and axis:\n    var x = d3.scaleBand()\n      .range([ 0, width ])\n      .domain(myGroups)\n      .padding(0.01);\n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x))\n\n    // Build X scales and axis:\n    var y = d3.scaleBand()\n      .range([ height, 0 ])\n      .domain(myVars)\n      .padding(0.01);\n    svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n    // Build color scale\n    var myColor = d3.scaleLinear()\n      .range([\"white\", \"#69b3a2\"])\n      .domain([1,100])\n\n    //Read the data\n    d3.csv(\"https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/heatmap_data.csv\", function(data) {\n\n      // create a tooltip\n      var tooltip = d3.select(\"body\")\n        .append(\"div\")\n        .style(\"opacity\", 0)\n        .attr(\"class\", \"tooltip\")\n        .style(\"background-color\", \"white\")\n        .style(\"border\", \"solid\")\n        .style(\"border-width\", \"2px\")\n        .style(\"border-radius\", \"5px\")\n        .style(\"padding\", \"5px\")\n\n      // Three function that change the tooltip when user hover / move / leave a cell\n      var mouseover = function(d) {\n        tooltip.style(\"opacity\", 1)\n      }\n      var mousemove = function(d) {\n        tooltip\n          .html(\"The exact value of<br>this cell is: \" + d.value)\n          .style(\"left\", (d3.mouse(this)[0]+70) + \"px\")\n          .style(\"top\", (d3.mouse(this)[1]) + \"px\")\n      }\n      var mouseleave = function(d) {\n        tooltip.style(\"opacity\", 0)\n      }\n\n      // add the squares\n      svg.selectAll()\n        .data(data, function(d) {return d.group+':'+d.variable;})\n        .enter()\n        .append(\"rect\")\n          .attr(\"x\", function(d) { return x(d.group) })\n          .attr(\"y\", function(d) { return y(d.variable) })\n          .attr(\"width\", x.bandwidth() )\n          .attr(\"height\", y.bandwidth() )\n          .style(\"fill\", function(d) { return myColor(d.value)} )\n        .on(\"mouseover\", mouseover)\n        .on(\"mousemove\", mousemove)\n        .on(\"mouseleave\", mouseleave)\n    })\n  }\n}\n\nexport default HeatMap;\n"]},"metadata":{},"sourceType":"module"}